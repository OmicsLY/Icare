% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-12-train.R, R/model-21-rocall.R
\name{plot_best_model_roc}
\alias{plot_best_model_roc}
\title{Plot ROC Curves for Best Model Across Multiple Datasets}
\usage{
plot_best_model_roc(
  best_model,
  train_data,
  test_data,
  validation_data,
  external_validation,
  group_col = "group",
  palette_name = "AsteroidCity1",
  base_size = 14,
  save_plots = TRUE,
  save_dir = here("ModelData", "best_model_result"),
  plot_width = 5,
  plot_height = 5,
  alpha = 1,
  subtitle = "Training and Testing Datasets"
)

plot_best_model_roc(
  best_model,
  train_data,
  test_data,
  validation_data,
  external_validation,
  group_col = "group",
  palette_name = "AsteroidCity1",
  base_size = 14,
  save_plots = TRUE,
  save_dir = here("ModelData", "best_model_result"),
  plot_width = 5,
  plot_height = 5,
  alpha = 1,
  subtitle = "Training and Testing Datasets"
)
}
\arguments{
\item{best_model}{The best trained classification model.}

\item{train_data}{(Optional) A data frame of the training set.}

\item{test_data}{(Optional) A data frame of the testing set.}

\item{validation_data}{(Optional) A data frame of the internal validation set.}

\item{external_validation}{(Optional) A data frame of the external validation set.}

\item{group_col}{Character; the name of the column containing binary class labels (e.g., "0" and "1"). Default is "group".}

\item{palette_name}{Character; the name of the color palette from the wesanderson package. Default is "AsteroidCity1".}

\item{base_size}{Numeric; base font size for plot text. Default is 14.}

\item{save_plots}{Logical; whether to save the ROC plot to file. Default is TRUE.}

\item{save_dir}{Character; directory to save the ROC plot. Default is \code{here("ModelData", "best_model_result")}.}

\item{plot_width}{Numeric; width of the saved plot in inches. Default is 5.}

\item{plot_height}{Numeric; height of the saved plot in inches. Default is 5.}

\item{alpha}{Numeric; transparency of ROC lines. Default is 1.}

\item{subtitle}{Character; subtitle text for the plot. Default is "Training and Testing Datasets".}

\item{save_data}{Logical indicating whether to save ROC curve data (default: TRUE)}

\item{csv_filename}{Character string for saved data filename (default: "best_model_roc_data.csv")}
}
\value{
A list of data frames containing ROC curve coordinates and AUC information for each dataset:
\itemize{
\item training - Data frame with training set ROC coordinates
\item testing - Data frame with testing set ROC coordinates
\item validation - Data frame with validation set ROC coordinates (if provided)
\item external_validation - Data frame with external validation ROC coordinates (if provided)
}

A named list of data frames, each containing ROC curve plotting data (specificity, sensitivity, and dataset label).
}
\description{
Generates and optionally saves ROC curves comparing model performance across:
\itemize{
\item Training set
\item Testing set
\item Validation set (optional)
\item External validation set (optional)
Includes AUC values with confidence intervals in legend labels.
}

This function generates and visualizes ROC curves for a given trained classification model
across multiple datasets (training, testing, validation, and external validation). AUC values
and 95\% confidence intervals are computed for each dataset. The ROC curves are optionally saved as a PDF.
}
\examples{
\dontrun{
# After training a model (e.g., randomForest)
model <- randomForest(group ~ ., data = train_data)

# Basic usage with training and test sets
roc_data <- plot_best_model_roc(
  best_model = model,
  train_data = train_data,
  test_data = test_data
)

# Full usage with all datasets
roc_data <- plot_best_model_roc(
  best_model = model,
  train_data = train_data,
  test_data = test_data,
  validation_data = valid_data,
  external_validation = ext_data,
  palette_name = "GrandBudapest1",
  save_dir = "results/roc_plots"
)
}

\dontrun{
  plot_best_model_roc(best_model = trained_model,
                      train_data = train_df,
                      test_data = test_df)
}
}
