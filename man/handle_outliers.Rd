% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat-4-outlier.R
\name{handle_outliers}
\alias{handle_outliers}
\title{Handle Outliers Using Specified Method}
\usage{
handle_outliers(
  data,
  handle_method = c("replace", "remove", "keep", "capping"),
  lower_quantile = 0.05,
  upper_quantile = 0.95,
  save_dir = here::here("StatObject", "Data"),
  save_data = F,
  csv_filename = "clean_data.csv"
)
}
\arguments{
\item{data}{A data frame containing columns with "_outlier" suffix indicating outlier status}

\item{handle_method}{Outlier handling method: "replace" (with median), "remove" (rows),
"keep" (no change), or "capping" (quantile-based) (default: "replace")}

\item{lower_quantile}{Lower quantile threshold for capping method (default: 0.05)}

\item{upper_quantile}{Upper quantile threshold for capping method (default: 0.95)}

\item{save_dir}{Directory path to save cleaned data (default: here("StatObject","Data"))}

\item{save_data}{Logical indicating whether to save cleaned data (default: TRUE)}

\item{csv_filename}{Filename for saved cleaned data (default: "clean_data.csv")}
}
\value{
A list containing (structure varies by method):
\itemize{
\item cleaned_data - Processed data frame
\item method - Applied handling method
\item Additional method-specific elements (replaced_values, capping_bounds etc.)
}
}
\description{
A wrapper function that applies different outlier handling methods (remove, replace, keep, or capping)
to a dataset containing outlier markers. Provides options to save the cleaned data.
}
\examples{
\dontrun{
# After detecting outliers
marked_data <- detect_outliers(mtcars)

# Basic usage (default replace method)
cleaned <- handle_outliers(marked_data)

# Capping method with custom quantiles
capped <- handle_outliers(marked_data,
                         handle_method = "capping",
                         lower_quantile = 0.1,
                         upper_quantile = 0.9)

# Without saving to file
cleaned <- handle_outliers(marked_data, save_data = FALSE)
}
}
