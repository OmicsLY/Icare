% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-7-outlier.R
\name{ModelHandleOutliers}
\alias{ModelHandleOutliers}
\title{Handle Outliers in Model Data}
\usage{
ModelHandleOutliers(
  object,
  save_cleaned = TRUE,
  handle_method = c("replace", "remove", "keep", "capping"),
  lower_quantile = 0.05,
  upper_quantile = 0.95,
  group_col = "group",
  save_data = TRUE,
  train_filename = "train_data.csv",
  test_filename = "test_data.csv",
  val_filename = "val_data.csv",
  ext_val_filename = "ext_val_data.csv",
  save_dir = here::here("ModelData", "Data")
)
}
\arguments{
\item{object}{A Train_Model object containing the datasets to process and outlier detection results}

\item{save_cleaned}{Logical indicating whether to save cleaned datasets (default: TRUE)}

\item{handle_method}{Outlier handling method, one of: "replace", "remove", "keep", "capping" (default: "replace")}

\item{lower_quantile}{Lower quantile threshold for outlier detection (default: 0.05)}

\item{upper_quantile}{Upper quantile threshold for outlier detection (default: 0.95)}

\item{group_col}{Column name containing group information (default: "group")}
}
\value{
Returns the modified Train_Model object with:
- Cleaned datasets in the split.data slot
- Outlier handling details stored in process.info slot
}
\description{
Applies specified outlier handling method to training, test, validation, and external validation datasets
in a Train_Model object. The handling is first applied to training data, then the same parameters are
automatically applied to other datasets to ensure consistency.
}
\examples{
# After detecting outliers with ModelDetectOutliers()
object_model <- ModelHandleOutliers(
  object = object_model,
  handle_method = "replace"
)


}
