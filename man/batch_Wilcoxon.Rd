% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat-4.R
\name{batch_Wilcoxon}
\alias{batch_Wilcoxon}
\title{Perform Batch Wilcoxon Test for Multiple Variables}
\usage{
batch_Wilcoxon(
  mat,
  group_col = "group",
  save_dir = here::here("StatObject", "deg_info"),
  save_data = TRUE,
  csv_filename = "last_test_sig.csv"
)
}
\arguments{
\item{mat}{A data frame or matrix containing the data. The first column should be the grouping variable (\code{group_col}),
and the remaining columns should contain numeric variables for the Wilcoxon tests.}

\item{group_col}{A string representing the column name in \code{mat} that defines the grouping variable.
It is assumed that the grouping variable has exactly two unique levels (e.g., treatment vs control).}
}
\value{
A data frame with the following columns:
\itemize{
\item \code{W}: The Wilcoxon test statistic.
\item \code{p}: The p-value from the Wilcoxon test.
\item \code{mean_x}: The mean of the variable for the first group.
\item \code{mean_y}: The mean of the variable for the second group.
\item \code{median_x}: The median of the variable for the first group.
\item \code{median_y}: The median of the variable for the second group.
\item \code{p.adjust}: The p-value adjusted using the Bonferroni correction.
\item \code{logFC}: The log2 fold change between the two groups.
\item \code{change}: A categorical variable indicating whether the log2 fold change is "Up", "Down", or "Stable",
based on a threshold of logFC > 0.5 or < -0.5, and p < 0.05.
}
}
\description{
This function performs pairwise Wilcoxon tests between two groups for each numeric variable in the input matrix.
It returns a summary table with the test statistics (W), p-values, mean and median values for each group,
standard deviations, log2 fold change, and the significance of the tests based on the p-values.
It also adjusts the p-values using the Bonferroni correction.
}
\examples{
# Example of using the batch_Wilcoxon function
# Assume 'data' is a data frame with numeric variables and a grouping variable 'group'
result <- batch_Wilcoxon(data, group_col = "group")
print(result)
}
