% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat-3.R
\name{plot_top_correlations}
\alias{plot_top_correlations}
\title{Plot Top Correlated Features from a Data Frame or Matrix}
\usage{
plot_top_correlations(
  data,
  top_n = 15,
  group_col = "group",
  palette_name = "Zissou1",
  save_plots = TRUE,
  plot_width = 5,
  plot_height = 5,
  save_dir = here("StatObject", "correlation_info"),
  base_size = 14
)
}
\arguments{
\item{data}{A data frame or matrix containing the features to be analyzed.}

\item{top_n}{An integer specifying the number of top correlated features to be plotted (default is 15).}

\item{group_col}{A character string specifying the column name for grouping (optional, default is "group").}

\item{palette_name}{A string specifying the color palette for the plot .}

\item{save_plots}{A logical value indicating whether to save the plot as a PDF (default is TRUE).}

\item{plot_width}{A numeric value specifying the width of the saved plot (default is 5).}

\item{plot_height}{A numeric value specifying the height of the saved plot (default is 5).}

\item{save_dir}{A string specifying the directory where the plot will be saved (default is \code{here("StatObject", "correlation_info")}).}

\item{base_size}{A numeric value specifying the base font size for the plot (default is 14).}
}
\value{
The function returns \code{invisible()}, and the plot is saved to the specified directory if \code{save_plots} is TRUE.
}
\description{
This function calculates the pairwise Pearson correlations of features in the provided
data frame or matrix, and plots the top \code{n} most correlated features using a correlation plot.
The plot can be saved as a PDF file. The user can specify the number of top correlated features
to be plotted, as well as customize plot settings such as the color palette and plot dimensions.
}
\details{
Plot Top Correlated Features
}
\examples{
# Plot the top 10 most correlated features from a data frame
plot_top_correlations(my_data_frame, top_n = 10)

# Plot and save the top 20 most correlated features with custom plot dimensions
plot_top_correlations(my_data_frame, top_n = 20, plot_width = 7, plot_height = 6)

}
