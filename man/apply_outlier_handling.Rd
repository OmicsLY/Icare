% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-7-outlier.R
\name{apply_outlier_handling}
\alias{apply_outlier_handling}
\title{Apply Specified Outlier Handling Method to Marked Data}
\usage{
apply_outlier_handling(data_marked, handling_result)
}
\arguments{
\item{data_marked}{A data frame containing the original data plus outlier indicator
columns (ending with "_outlier").}

\item{handling_result}{A named list containing:
\describe{
\item{method}{The outlier handling method ("remove", "replace", "keep", or "capping")}
\item{replaced_values}{For "replace" method: named list of replacement values}
\item{capping_bounds}{For "capping" method: named list with lower/upper bounds}
}}
}
\value{
A list containing:
\describe{
\item{cleaned_data}{Processed data frame with outliers handled}
\item{method}{The method actually used}
\item{replaced_values}{For "replace": the replacement values used (if applicable)}
\item{capping_bounds}{For "capping": the bounds applied (if applicable)}
\item{parameters}{Additional parameters from handling_result (if any)}
}
}
\description{
Processes data that has been marked with outliers (columns ending with "_outlier")
according to the specified handling method. Supports removal, replacement, capping,
or keeping outliers.
}
\examples{
# Example with replacement method
marked_data <- data.frame(
  value = c(1, 5, 100),
  value_outlier = c(FALSE, FALSE, TRUE)
)

handling <- list(
  method = "replace",
  replaced_values = list(value = median(marked_data$value))
)

apply_outlier_handling(marked_data, handling)

# Example with capping method
handling <- list(
  method = "capping",
  capping_bounds = list(
    value = list(lower_bound = 1, upper_bound = 10)
  )
)

apply_outlier_handling(marked_data, handling)
}
