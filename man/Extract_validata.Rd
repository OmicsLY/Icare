% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-4-val-add.R
\name{Extract_validata}
\alias{Extract_validata}
\title{Extract and Prepare Validation Data for Model Evaluation}
\usage{
Extract_validata(
  data = NULL,
  object_stats = NULL,
  object_model = NULL,
  group_col = NULL,
  max_unique_values = 5,
  ...
)
}
\arguments{
\item{data}{Optional raw data frame containing validation data.
Must be provided if object_stats is NULL.}

\item{object_stats}{Optional Stat class object containing pre-processed data.
Must be provided if data is NULL.}

\item{object_model}{Required Train_Model object to be updated with validation data.}

\item{group_col}{Optional name of the grouping/outcome variable column.}

\item{max_unique_values}{Maximum number of unique values for a numeric variable to be
considered for conversion to factor (default: 5).}

\item{...}{Additional arguments passed to diagnostic functions.}
}
\value{
The updated Train_Model object with validation data stored in the
split.data$validation slot.
}
\description{
Processes validation data from either raw data frame or Stat object, preparing it for
model evaluation by:
\enumerate{
\item Cleaning special characters (>, <) from numeric values
\item Ensuring unique row/column names
\item Automatic variable type conversion
\item One-hot encoding for categorical variables
\item Binary conversion for factors
Finally updates the Train_Model object with validation data.
}
}
\examples{
# Using raw data frame
object_model <- new("Train_Model")
valid_df <- data.frame(
  group = factor(c("A","B","A")),
  var1 = c(1, 2, 1),
  var2 = c("X", "Y", "X")
)
updated_model <- Extract_validata(
  data = valid_df,
  object_model = object_model,
  group_col = "group"
)

# Using Stat object
object_model <- new("Stat", clean.df = valid_df)
updated_model <- Extract_validata(
  object_stats = object_model,
  object_model = object_model,
  group_col = "group"
)

}
