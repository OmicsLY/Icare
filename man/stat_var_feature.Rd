% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat-4.R
\name{stat_var_feature}
\alias{stat_var_feature}
\title{Perform Feature Selection Using Batch Wilcoxon Test}
\usage{
stat_var_feature(
  object,
  group_col = "group",
  save_dir = here::here("StatObject", "deg_info"),
  data_type = "scale",
  save_data = TRUE,
  csv_filename = "last_test_sig.csv"
)
}
\arguments{
\item{object}{An object of class \code{Stat} or a data frame. If an object of class \code{Stat}, the relevant data will be
extracted using the \code{data_type} argument. If a data frame, it is used directly.}

\item{group_col}{A string representing the column name in \code{object} or the data frame that defines the grouping variable.
This column should contain at least two distinct non-missing values for comparison.}

\item{data_type}{A string indicating the type of data to extract from the \code{Stat} object. Options are \code{"clean"} for clean
data or \code{"scale"} for scaled data. Default is \code{"scale"}.}
}
\value{
If the input is an object of class \code{Stat}, it returns the updated \code{Stat} object with the \code{var.result} slot
updated with the results of the feature selection. If the input is a data frame, it returns a data frame containing the
significant features based on the Wilcoxon test.
}
\description{
This function performs a batch Wilcoxon test for feature selection, comparing different groups based on the specified
group column. The function accepts an object of class \code{Stat} or a data frame, extracts the relevant data based on the
\code{data_type} argument, and applies the batch Wilcoxon test to select significant features.
If the input is an object of class \code{Stat}, the results will be updated in the object. If the input is a data frame,
the result will be returned as a data frame.
}
\examples{
# Example of using the stat_var_feature function with a data frame
result <- stat_var_feature(data, group_col = "group")
print(result)

# Example of using the stat_var_feature function with a 'Stat' object
stat_object <- stat_var_feature(stat_object, group_col = "group", data_type = "clean")
print(stat_object)
}
